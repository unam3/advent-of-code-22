P1.

Implement parseInput.
After if we go into `cd` command and directoryContent is not empty â€” we should assign that content to path in fs.
How to store directories and files in FS map?
For files we can store just size. For directories we could just store list of directories and files names.
What about last ls-block from testInput which does not have cd after it, so directory content will never be assigned?  Run processTempDirectoryContent in parse.

Find all of the directories with a total size of at most 100000.

What is the sum of the total sizes of those directories?

Remarks about input.txt:

- no empty dirs: /ls .*\n\$ cd
- no consecutive ls calls: /ls\n\$ ls

Could we go into same dir in cd and get ls of it second time in input.txt?

+ Need to implement function that will get directory size.
How can we compare suffixes of AbsolutePaths?
+ use reverse and isPrefixOf.
- Change NonEmpty lists to regular one and use isSuffixOf.

- Get all directories size and filter them out.

----
- We can rid of NonEmpty list because it is no use.
- We can store reversed AbsolutePath in the form of ["\", "pluh"].


Part 2.
Find the smallest directory that, if deleted, would free up enough space on the filesystem to run the update.
What is the total size of that directory?

1. Find out size of unused space: totalFSSize - (getDirectorySize "/").
2. Find out how much space we need to free up for update: requiredSpace - unusedSpace.
3. Modify solveFirstPart: set filter condition to spaceToFreeUp.
4. Run maximum on (3).


totalFSSize =   70000000
requiredSpace = 30000000
