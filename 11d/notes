Part I.

parseInput.

Split input to sections for each monkey. ../05d/src/SupplyStacks: group and splitByEmptyLines.

Parse each monkey section and add to InputData accumulator with foldl'.

worry level
    -> inspection
    -> worry level modified with operation after monkey inspected an item
    -> relief: worry level to be divided by three and rounded down to the nearest integer
    -> test

On a single monkey's turn, it inspects and throws all of the items it is holding one at a time and in the order listed.

If a monkey is holding no items at the start of its turn, its turn ends.

How to implement throwing?
We always throw all tthe items, so we can just use empty list for current monkey.

Monkey 0 goes first, then monkey 1, and so on until each monkey has had one turn.

Why items that were thrown to monkey 3 doesn't end up in monkey 1 items?
Because ifoldl' uses initial inputData, and not accumulator one.

Will we encounter throwing to current monkey itself? Need to add error throw in this case. Done.

The process of each monkey taking a single turn is called a round.

How many items monkeys inspected? Need to collect this. In the state? Sure.

Having run out of RAM with current implementation. Need to optimize.

monkey business = multiplication of the numbers two most active monkeys inspected items.

Figure out which monkeys to chase by counting how many items they inspect over 20 rounds.
What is the level of monkey business after 20 rounds?
